/* DEMO */

import { Rec, RecomendationsResponse } from "@/types/response/recomendations";
import { useQuery } from "@tanstack/react-query";
import axios from "axios";
import { ScrollArea } from "../ui/scroll-area";
import { Card, CardContent } from "../ui/card";
import Image from "../ui/image";
import { Link } from "@inertiajs/react";
import { getUrl, Product_Show } from "@/generated/routes";
import { Star } from "lucide-react";
import { cn } from "@/lib/utils";
import { Button } from "../ui/button";
import { EmblaCarousel } from "./overflow-carousel";

const config = {
  host: "https://api.cquotient.com/v3",
  einsteinId: "1ea06c6e-c936-4324-bcf0-fada93f83bb1",
  siteId: "aaij-MobileFirst",
  // Flag Einstein activities as coming from a production environment.
  // By setting this to true, the Einstein activities generated by the environment will appear
  // in production environment reports
  isProduction: false,
};

const ProductTile = ({ image_url, product_name, id }: Rec) => {
  return (
    <div className="group w-full max-w-[300px] min-w-[300px]">
      <div className="bg-gray-100 rounded-lg overflow-hidden aspect-square mb-4 relative">
        <Image
          src={image_url}
          alt={product_name}
          width={300}
          height={300}
          className="object-cover w-full h-full group-hover:scale-105 transition-transform"
        />
      </div>
      <h3 className="font-medium truncate">
        <Link href={getUrl(Product_Show, { pid: id })}>{product_name}</Link>
      </h3>
    </div>
  );
};

export default function EinsteinRecs({
  pid,
  recomender,
}: {
  pid: string;
  recomender: string;
}) {
  const { data, isLoading } = useQuery<RecomendationsResponse>({
    queryKey: ["einstein2", { pid, recomender }],
    queryFn: async () => {
      const response = await fetch(
        `${config.host}/personalization/recs/${config.siteId}/${recomender}`,
        {
          method: "POST",
          body: JSON.stringify({
            products: [
              {
                id: pid,
              },
            ],
          }),
          redirect: "manual",
          cache: "no-cache",
          headers: {
            "x-cq-client-id": config.einsteinId,
          },
        }
      );

      const data = await response.json();

      return data;
    },
  });

  if (isLoading || !data?.recs) {
    return <></>;
  }

  return (
    <section className="mt-16">
      <div className="flex items-center justify-between mb-6">
        <h2 className="text-2xl font-bold">You might also like</h2>
        <Button variant="link" asChild>
          <Link href="#">View all</Link>
        </Button>
      </div>
      <EmblaCarousel className="pb-4">
        <div className="flex gap-6">
            {data.recs.map((i) => (
              <ProductTile  key={i.id} {...i} />
            ))}
        </div>
      </EmblaCarousel>
    </section>
  );
}
